model Cobrador {
  id        Int      @id @default(autoincrement())
  usuarioId Int      @unique
  usuario   User     @relation(fields: [usuarioId], references: [id])
  rutas     Ruta[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ruta {
  id         Int      @id @default(autoincrement())
  nombre     String
  sector     String
  cobradorId Int
  cobrador   Cobrador @relation(fields: [cobradorId], references: [id])
  clientes   Cliente[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cobrador  Cobrador?
}

model Cliente {
  id                 Int       @id @default(autoincrement())
  tipoIdentificacion String
  identificacion     String    @unique
  nombres            String
  apellidos          String
  edad               Int?
  direccion          String
  telefono           Int
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  prestamos          Prestamo[]
  rutas              Ruta[]
}

model Prestamo {
  id          Int      @id @default(autoincrement())
  codigo      String   @unique
  monto       Decimal  @db.Decimal(12,2)
  tasa        Float
  plazoDias   Int
  fechaInicio DateTime
  estado      String
  clienteId   Int
  cliente     Cliente  @relation(fields: [clienteId], references: [id])
  pagos       Pago[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Pago {
  id         Int      @id @default(autoincrement())
  prestamoId Int
  fecha      DateTime
  monto      Decimal  @db.Decimal(12,2)
  prestamo   Prestamo @relation(fields: [prestamoId], references: [id])
}
